
CREATE TABLE "SYSTEM"."USERS"
(	"ID" NUMBER(19,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE,
     "EMAIL" VARCHAR2(255 CHAR),
     "FIRST_NAME" VARCHAR2(255 CHAR),
     "LAST_NAME" VARCHAR2(255 CHAR),
     "PASSWORD" VARCHAR2(255 CHAR),
     "ROLE" VARCHAR2(255 CHAR),
     "STATUS" VARCHAR2(255 CHAR),
     "FIRST_ENTRY" DATE,
     "LAST_ENTRY" DATE,
     "USER_GROUP_ID" NUMBER,
     PRIMARY KEY ("ID")
         USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
         STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
         PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
         BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
         TABLESPACE "SYSTEM"  ENABLE
) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;


CREATE TABLE "SYSTEM"."USER_GROUP"
(	"ID" NUMBER NOT NULL ENABLE,
     "NAME" VARCHAR2(100 BYTE) NOT NULL ENABLE,
     "SHORT_NAME" VARCHAR2(20 BYTE) NOT NULL ENABLE
) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

CREATE SEQUENCE USER_GROUP_SEQ
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 9999999999999999999999999999
    CACHE 20;

CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."USER_GROUP_TRG"
BEFORE INSERT ON USER_GROUP
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
SELECT USER_GROUP_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."USER_GROUP_TRG" ENABLE;


CREATE TABLE "SYSTEM"."TASKS"
(	"ID" NUMBER(19,0) NOT NULL ENABLE,
     "REFERENCE_QUERY" VARCHAR2(1000 BYTE) NOT NULL ENABLE,
     "TITLE" VARCHAR2(100 BYTE) NOT NULL ENABLE,
     "SERIAL_NUMBER" NUMBER NOT NULL ENABLE,
     "DESCRIPTION" VARCHAR2(2000 BYTE),
     "QUERY_HISTORY_ID" NUMBER,
     "DECIDED_RIGHT" NUMBER(19,0),
     "DECIDED_WRONG" NUMBER(19,0),
     "TOTAL_ATTEMPTS" NUMBER(19,0),
     CONSTRAINT "TASKS_PK" PRIMARY KEY ("ID")
         USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
         STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
         PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
         BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
         TABLESPACE "SYSTEM"  ENABLE
) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

COMMENT ON COLUMN "SYSTEM"."TASKS"."QUERY_HISTORY_ID" IS 'Лучший запрос';


CREATE SEQUENCE TASKS_SEQ1
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 9999999999999999999999999999
    CACHE 20;

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."TASKS_TRG"
BEFORE INSERT ON TASKS
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
NULL;
END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."TASKS_TRG" ENABLE;

CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."TASKS_TRG1"
BEFORE INSERT ON TASKS
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
SELECT TASKS_SEQ1.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."TASKS_TRG1" ENABLE;


CREATE TABLE "SYSTEM"."TASKS_USERS"
(	"TASKS_ID" NUMBER(19,0) NOT NULL ENABLE,
     "USERS_ID" NUMBER(19,0) NOT NULL ENABLE,
     "STATUS" NUMBER,
     CONSTRAINT "TASKS_USERS__IDX" PRIMARY KEY ("TASKS_ID", "USERS_ID")
         USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
         STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
         PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
         BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
         TABLESPACE "SYSTEM"  ENABLE,
     CONSTRAINT "FK_ASS_1" FOREIGN KEY ("TASKS_ID")
         REFERENCES "SYSTEM"."TASKS" ("ID") ON DELETE CASCADE ENABLE,
     CONSTRAINT "FK_ASS_2" FOREIGN KEY ("USERS_ID")
         REFERENCES "SYSTEM"."USERS" ("ID") ON DELETE CASCADE ENABLE
) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;


CREATE TABLE "SYSTEM"."QUERY_HISTORY"
(	"ID" NUMBER NOT NULL ENABLE,
     "USERS_ID" NUMBER NOT NULL ENABLE,
     "TASKS_ID" NUMBER NOT NULL ENABLE,
     "RESULT" NUMBER NOT NULL ENABLE,
     "SQL" VARCHAR2(2000 BYTE) NOT NULL ENABLE,
     "COST" NUMBER,
     "TIME" TIMESTAMP (6) NOT NULL ENABLE,
     CONSTRAINT "QUERY_HISTORY_PK" PRIMARY KEY ("ID")
         USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
         STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
         PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
         BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
         TABLESPACE "SYSTEM"  ENABLE
) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

COMMENT ON COLUMN "SYSTEM"."QUERY_HISTORY"."RESULT" IS '0 - FALSE
1 - TRUE';

CREATE SEQUENCE QUERY_HISTORY_SEQ
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 9999999999999999999999999999
    CACHE 20;

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."QUERY_HISTORY_TRG"
BEFORE INSERT ON QUERY_HISTORY
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
SELECT QUERY_HISTORY_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."QUERY_HISTORY_TRG" ENABLE;


CREATE TABLE "SYSTEM"."COMMENTS"
(	"ID" NUMBER(19,0) NOT NULL ENABLE,
     "TASKS_ID" NUMBER(19,0) NOT NULL ENABLE,
     "USERS_ID" NUMBER(19,0) NOT NULL ENABLE,
     "TEXT" VARCHAR2(2000 BYTE) NOT NULL ENABLE,
     "TIME" DATE NOT NULL ENABLE
) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

CREATE SEQUENCE COMMENTS_SEQ
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 9999999999999999999999999999
    CACHE 20;

CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."COMMENTS_TRG"
BEFORE INSERT ON COMMENTS
FOR EACH ROW
BEGIN
<<COLUMN_SEQUENCES>>
BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
SELECT COMMENTS_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
END IF;
END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."COMMENTS_TRG" ENABLE;




